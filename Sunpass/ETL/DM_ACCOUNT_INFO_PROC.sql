/********************************************************
*
* Name: DM_ACCOUNT_INFO_PROC
* Created by: DT, 4/16/2016
* Revision: 1.0
* Description: This is the template for bulk read/write
*              DM_ACCOUNT_INFO
*
********************************************************/

set serveroutput on
set verify on
set echo on

CREATE OR REPLACE PROCEDURE DM_ACCOUNT_INFO_PROC IS

TYPE DM_ACCOUNT_INFO_TYP IS TABLE OF DM_ACCOUNT_INFO%ROWTYPE 
     INDEX BY BINARY_INTEGER;
DM_ACCOUNT_INFO_tab DM_ACCOUNT_INFO_TYP;


P_ARRAY_SIZE NUMBER:=10000;


CURSOR C1 IS SELECT 
    ACCT_NUM ACCOUNT_NUMBER 
    ,ACCTSTAT_ACCT_STATUS_CODE ACCOUNT_STATUS 
    ,NULL ACCOUNT_STATUS_DATETIME 
    ,'NONE' STATEMENT_DELIVERY_MODE 
    ,'NONE' STATEMENT_PERIOD 
    ,f(ACCTTYPE_ACCT_TYPE_CODE,'NEED A TRANSLATION TABLE')  ACCOUNT_TYPE 
    ,ACCT_OPEN_DATE ACCOUNT_OPEN_DATE 
    ,F_NAME||' '||L_NAME ACCOUNT_NAME 
    ,ORG COMPANY_NAME 
    ,NULL DBA 
    ,E_MAIL_ADDR EMAIL_ADDRESS 
    ,REPL_AMT REBILL_AMOUNT 
    ,REPL_THRESH_AMT REBILL_THRESHOLD 
    ,ACCT_PIN_NUMBER PIN 
    ,NULL VIDEO_ACCT_STATUS 
    ,NULL SUSPENDED_DATE 
    ,NULL LAST_INVOICE_DATE 
    ,ACCT_CLOSE_DATE ACCOUNT_CLOSE_DATE 
    ,NULL CORRESPONDENCE_DEL_MODE 
    ,'ENGLISH' LANGUAGE_PREFERENCE 
    ,'OPT-OUT' MOBILE_ALERTS 
    ,NULL CHALLENGE_QUESTION 
    ,NULL CHALLENGE_ANSWER 
    ,NULL IS_POSTPAID 
    ,'OPT-IN' IS_SURVEY_OPTED 
    ,NULL ACC_LOCKED_DATETIME 
    ,NULL ACCOUNT_LOCKED 
    ,NULL NSF_LOCK_RELEASED_DT 
    ,NULL CHARGEBACK_RELEASED_DT 
    ,NULL  BANKRUPTCY_DATE 
    ,'NO' COURT_FLAG
    ,NULL OUTBOUND_DAILER 
    ,NULL DO_NOT_CALL 
    ,NULL APPLICATION_NUMBER 
    ,NULL COLLECTION_AGENCY
    ,NULL ACCOUNT_CLOSE_PEND_DT 
    ,NULL DECEASED 
    ,ACCT_OPEN_DATE CREATED 
    ,NULL CREATED_BY 
    ,NULL LAST_UPD 
    ,NULL LAST_UPD_BY 
    ,MOTHERS_MAIDEN_NAME MOTHERS_MAIDEN_NAME 
    ,NULL FEIN_NUMBER 
    ,NULL CAST_ACCOUNT_FLAG
    ,NULLTAX_EXEMPTION_ID 
    ,NULL EXPIRATION_DATE 
    ,ANON_ACCT ANONYMOUS_ACCOUNT 
    ,NULL SECONDARY_EMAIL_ADDRESS 
    ,'SUNPASS' SOURCE_SYSTEM /
    ,NULL BKTY_FILE_DATE 
    ,NULL BKTY_DICHG_DATE 
    ,NULL BKTY_DISMISS_DATE /
    ,NULL BKTY_CASEID 
    ,NULL BKTY_NOTIFY_BY 
    ,NULL IS_REGISTERED 
    ,NULL OWNER_TYPE 
FROM PATRON.DM_ACCOUNT_INFO; 

BEGIN
 
  OPEN C1;  

  LOOP

    /*Bulk select */
    FETCH C1 BULK COLLECT INTO DM_ACCOUNT_INFO_tab
    LIMIT P_ARRAY_SIZE;


    /*ETL SECTION BEGIN */
     for i in DM_ACCOUNT_INFO_tab.first .. DM_ACCOUNT_INFO_tab.last loop

        /* get PA_ACCT_FLAGS.FEIN_NUMBER for FEIN_NUMBER */
        BEGIN
          SELECT FEIN_NUMBER
          INTO DM_ACCOUNT_INFO_tab(i).FEIN_NUMBER
          FROM PA_ACCT_FLAGS
          WHERE acct_acct_num=DM_ACCOUNT_INFO_tab(i).acct_num;
        EXCEPTION
        WHEN OTHERS THEN
          DM_ACCOUNT_INFO_tab(i).FEIN_NUMBER:=NULL;
        END;

        /* get PA_ACCT_FLAGS.CAST_ACCOUNT_FLAG for CAST_ACCOUNT_FLAG */
        BEGIN
          SELECT CAST_ACCOUNT_FLAG
          INTO DM_ACCOUNT_INFO_tab(i).CAST_ACCOUNT_FLAG
          FROM PA_ACCT_FLAGS
          WHERE acct_acct_num=DM_ACCOUNT_INFO_tab(i).acct_num;
        EXCEPTION
        WHEN OTHERS THEN
          DM_ACCOUNT_INFO_tab(i).CAST_ACCOUNT_FLAG:=NULL;
        END;
        /* get PA_ACCT_TAX_EXEMPTION.TAX_EXEMPTION_ID for TAX_EXEMPTION_ID */
        BEGIN
          SELECT TAX_EXEMPTION_ID
          INTO DM_ACCOUNT_INFO_tab(i).TAX_EXEMPTION_ID
          FROM PA_ACCT_TAX_EXEMPTION
          WHERE acct_acct_num=DM_ACCOUNT_INFO_tab(i).acct_num;
        EXCEPTION
        WHEN OTHERS THEN
          DM_ACCOUNT_INFO_tab(i).TAX_EXEMPTION_ID:=NULL;
        END;
        /* get PA_ACCT_TAX_EXEMPTION.EXPIRATION_DATE for EXPIRATION_DATE */
        BEGIN
          SELECT EXPIRATION_DATE
          INTO DM_ACCOUNT_INFO_tab(i).EXPIRATION_DATE
          FROM PA_ACCT_TAX_EXEMPTION
          WHERE acct_acct_num=DM_ACCOUNT_INFO_tab(i).acct_num;
        EXCEPTION
        WHEN OTHERS THEN
          DM_ACCOUNT_INFO_tab(i).EXPIRATION_DATE:=NULL;
        END;



     end loop;

    /*ETL SECTION END*/

    /*Bulk insert */ 
    FORALL i in DM_ACCOUNT_INFO_tab.first .. DM_ACCOUNT_INFO_tab.last
           INSERT INTO DM_ACCOUNT_INFO VALUES DM_ACCOUNT_INFO_tab(i);
                       
    EXIT WHEN C1%NOTFOUND;
  END LOOP;

  COMMIT;

  CLOSE C1;

  COMMIT;

  EXCEPTION
  WHEN OTHERS THEN
     DBMS_OUTPUT.PUT_LINE('ERROR CODE: '||SQLCODE);
     DBMS_OUTPUT.PUT_LINE('ERROR MSG: '||SQLERRM);
END;
/
SHOW ERRORS


